Лабораторная работа.
Написать программу, решающую задачу и оформить отчет.
Реализовать графическое приложение «Пятнашки» с использованием библиотеки Swing.
При запуске приложения в квадратном графическом окне в случайном порядке отображаются 15 костей пронумерованных от 1 до 15 (причем свободное место всегда нижний правый квадрат). Пользователь должен упорядочить кости в порядке возрастания от 1 до 15, используя свободное место (см. рисунок ниже).
1	2	3	4
5	6	7	8
9	10 11 12
13 14 15	
Нижний правый квадрат – свободное место.
При запуске программы окно отображается в центре графического экрана. Изменять размеры графического окна после его отображения на экране пользователь не может. Номер, изображенный на кости, должен занимать не менее 5/8 от высоты кости. Кости должны плотно прилегать друг к другу, а также к левой, к нижней и к правой границам графического окна. Когда пользователь соберет все кости в нужном порядке, должно выводиться модальное диалоговое окно, сообщающее об окончании текущей игры. 
Кроме костей в графическом окне располагается главное меню (горизонтальное) из двух пунктов: File и Help. Для пунктов главного меню необходимо определить мнемоники.
При выборе пункта File отображается выпадающее меню, содержащее пункты меню New, разделитель, Exit. Для пунктов выпадающего меню необходимо определить мнемоники и задать акселераторы. При выборе пункта New в графическом окне в случайном порядке отображаются 15 костей пронумерованных от 1 до 15, причем свободное место всегда нижний правый квадрат. Выбор Exit приводит к завершению программы.
При выборе пункта Help отображается выпадающее меню, содержащее пункт меню About. Для пункта выпадающего меню необходимо определить мнемоник и задать акселератор. При выборе пункта меню About отображается модальное диалоговое окно. В окно нужно поместить информацию об авторе: фамилия, имя, группа, год.
Пользователь должен иметь возможность взаимодействовать с приложением, как с помощью мыши, так и с помощью клавиатуры.
Если пользователь совершит щелчок на кости с номер 12 (см. рисунок выше), то эта кость переместится вниз на свободное место. Если совершит щелчок на кости с номер 15, то эта кость переместится вправо на свободное место. При щелчке на любой другой кости ничего не произойдет.
Если пользователь использует клавиатуру, то при нажатии клавиши ↓, кость с номером 12 переместится вниз, а при нажатии клавиши →, кость с номером 15 переместиться вправо. При нажатии клавиш ← и ↑ ничего не происходит.
За один ход перемещается только одна кость.
Лабораторная работа состоит из двух этапов: проектирование и реализация. Пока не принят этап проектирования, реализация не рассматривается!
Проект представляется в виде текстового файла, в котором описываются все классы и их данные. Кроме того, на естественном языке описываются все действия для всех методов.
Общие требования:
1.	Не использовать коллекции.
2.	Качество кода. Грамотное проектирование. Функциональная прочность вспомогательных методов. Оптимизация по времени и по памяти.
3.	Не использовать доступ по умолчанию. Указывать доступ для всего, классов, данных, методов.
4.	Не использовать рекурсию.
5.	Для всех классов перед каждым методом (кроме main()),в комментариях должно быть записано: какую задачу решает метод, какие параметры ему передаются, что возвращается в результате.
6.	Для всех объявленных в методах переменных, включая метод main(), в комментариях необходимо указать их назначение.
7.	Все важные для понимания методов моменты должны сопровождаться комментариями.
Отчет по лабораторной работе
Содержание отчета:
•	Условие задачи.
•	Описание алгоритма (проект).
•	Листинг программы (проект + код).
•	Набор тестов программы (в main()).
Отчет по лабораторной работе представляется в виде набора текстовых файлов (*.java). Защита отчета проходит в форме доклада студента по выполненной работе и ответов на вопросы преподавателя.
В случае если оформление отчета и поведение студента во время защиты соответствуют указанным требованиям, студент получает максимальное количество баллов.
Основаниями для снижения количества баллов в диапазоне от max до min являются:
•	реализован неэффективный алгоритм по памяти и/или количеству операций;
•	не проведена оптимизация повторов, ветвлений;
•	полное или частичное отсутствие комментариев.
Отчет не может быть принят и подлежит доработке в случае:
•	неправильной работы программы для всех или некоторых входных данных;
•	отсутствия необходимых разделов;
•	неполного выполнения задания по лабораторной работе.
